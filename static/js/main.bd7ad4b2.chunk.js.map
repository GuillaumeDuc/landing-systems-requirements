{"version":3,"sources":["components/header.js","components/footer.js","dashboard-central/dashboard-central.js","dashboard-side/moving-pane.js","actions/side.js","components/change-mode.js","components/open-csv.js","components/open-relation.js","components/export-csv.js","dashboard-side/dashboard-side.js","components/requirement-component.js","components/relation.js","App.js","serviceWorker.js","reducers/side.js","reducers/index.js","store.js","index.js"],"names":["Header","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Component","Footer","DashboardCentral","props","tableToDiv","bind","toRequirement","index","this","history","push","table","nTable","map","obj","Object","keys","key","onClick","csv","connect","state","side","withRouter","MovingPane","hidden","handleClick","setState","panel","content","icon","Icon","iconName","setRelation","relation","type","ChangeMode","handleChange","ev","checked","modeType","setMode","mode","label","defaultChecked","onText","offText","onChange","dispatch","OpenCsv","handleForce","data","setCSV","papaparseOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","cssClass","onFileLoaded","parserOptions","OpenRelation","ExportCsv","separator","name","DashboardSide","RequirementComponent","_onChangeType","event","item","selectedType","_onChangeRelation","selectedRelation","getRequirement","makeRelation","relationReq","currentReq","getRequirementFromTableIndex","match","params","nReq","x","link","y","secondReq","getRequirementFromTableLink","requirements","indexData","nRequirement","parseInt","rel","target","requirement","text","getRequirementFromTableText","itemType","DropdownMenuItemType","dropDownTable","getDropDownFromTable","Dropdown","selectedKey","undefined","placeholder","options","styles","dropdown","width","allowDisabledFocus","disabled","Relation","elem","divElement","getPicture","initializeIcons","App","path","component","Boolean","window","location","hostname","initialState","action","rootReducer","combineReducers","createStore","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd7ad4b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">Requirements</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Link to=\"/\" className=\"header-link\">\r\n                Home\r\n              </Link>\r\n              <Link to=\"/other\" className=\"header-link\">\r\n                Relation\r\n              </Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return <footer className=\"footer\"></footer>;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass DashboardCentral extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tableToDiv = this.tableToDiv.bind(this);\r\n    this.toRequirement = this.toRequirement.bind(this);\r\n  }\r\n\r\n  toRequirement(index) {\r\n    this.props.history.push(\"/requirement/\" + index);\r\n  }\r\n\r\n  tableToDiv(table) {\r\n    let nTable = [];\r\n    if (table) {\r\n      nTable = table.map((obj, index) => {\r\n        const listDiv = (\r\n          <div className=\"ls-line\">\r\n            {Object.keys(obj).map(key => {\r\n              return (\r\n                <div\r\n                  className=\"ls-requirements\"\r\n                  onClick={() => this.toRequirement(index)}\r\n                >\r\n                  <div className=\"ls-row-title\">{key}</div>\r\n                  <div className=\"ls-row\">{obj[key]}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n        return listDiv;\r\n      });\r\n    }\r\n    return nTable;\r\n  }\r\n\r\n  render() {\r\n    const table = this.tableToDiv(this.props.csv);\r\n    return <div className=\"dashboard-central\">{table}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { csv: state.side.csv };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(DashboardCentral));\r\n","import React, { Component } from \"react\";\r\nimport { Icon } from \"office-ui-fabric-react/lib-commonjs/Icon\";\r\n\r\nclass MovingPane extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hidden: props.hidden ? true : false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const hidden = this.state.hidden;\r\n    this.setState({ hidden: !hidden });\r\n  }\r\n\r\n  render() {\r\n    const panel = (\r\n      <div\r\n        className={`moving-pane-content${this.state.hidden ? \"-hidden\" : \"\"}`}\r\n      >\r\n        {this.props.content ? this.props.content : \"\"}\r\n      </div>\r\n    );\r\n\r\n    const icon = (\r\n      <div\r\n        className={`moving-pane-picture${this.state.hidden ? \"-hidden\" : \"\"}`}\r\n      >\r\n        <Icon\r\n          iconName=\"ChevronLeftSmall\"\r\n          className=\"arrow\"\r\n          onClick={this.handleClick}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    const movingPane = <div className={\"moving-pane\"}>{[panel, icon]}</div>;\r\n\r\n    return movingPane;\r\n  }\r\n}\r\n\r\nexport default MovingPane;\r\n","export const setMode = mode => ({\r\n  type: \"SET_MODE\",\r\n  mode\r\n});\r\n\r\nexport const setCSV = csv => ({\r\n  type: \"SET_CSV\",\r\n  csv\r\n});\r\n\r\nexport const setRelation = relation => ({\r\n  type: \"SET_RELATION\",\r\n  relation\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Toggle } from \"office-ui-fabric-react/lib-commonjs/Toggle\";\r\nimport { setMode } from \"../actions/side\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ChangeMode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(ev, checked) {\r\n    const modeType = checked ? \"light\" : \"dark\";\r\n    this.props.setMode(modeType);\r\n  }\r\n  render() {\r\n    const checked = this.props.mode === \"light\";\r\n    return (\r\n      <div className=\"change-mode\">\r\n        <Toggle\r\n          label=\"Background\"\r\n          defaultChecked={checked}\r\n          onText=\"Light\"\r\n          offText=\"Dark\"\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setMode: mode => {\r\n      dispatch(setMode(mode));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ChangeMode);\r\n","import React, { Component } from \"react\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCSV } from \"../actions/side\";\r\n\r\nclass OpenCsv extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleForce = this.handleForce.bind(this);\r\n  }\r\n\r\n  handleForce = data => this.props.setCSV(data);\r\n\r\n  papaparseOptions = {\r\n    header: true,\r\n    dynamicTyping: true,\r\n    skipEmptyLines: true,\r\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <CSVReader\r\n          cssClass=\"react-csv-input\"\r\n          label=\"Select Requirements\"\r\n          onFileLoaded={this.handleForce}\r\n          parserOptions={this.papaparseOptions}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCSV: csv => {\r\n      dispatch(setCSV(csv));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(OpenCsv);\r\n","import React, { Component } from \"react\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport { connect } from \"react-redux\";\r\nimport { setRelation } from \"../actions/side\";\r\n\r\nclass OpenRelation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleForce = this.handleForce.bind(this);\r\n  }\r\n\r\n  handleForce = data => this.props.setRelation(data);\r\n\r\n  papaparseOptions = {\r\n    header: true,\r\n    dynamicTyping: true,\r\n    skipEmptyLines: true,\r\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <CSVReader\r\n          cssClass=\"react-csv-input\"\r\n          label=\"Select Relation\"\r\n          onFileLoaded={this.handleForce}\r\n          parserOptions={this.papaparseOptions}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setRelation: relation => {\r\n      dispatch(setRelation(relation));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(OpenRelation);\r\n","import React, { Component } from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nclass ExportCsv extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"csv-dl-link\">\r\n          <CSVLink data={this.props.table} separator={\";\"}>\r\n            Download {this.props.name} CSV\r\n          </CSVLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExportCsv;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport DashboardCentral from \"../dashboard-central/dashboard-central\";\r\nimport MovingPane from \"./moving-pane\";\r\nimport ChangeMode from \"../components/change-mode\";\r\nimport OpenCsv from \"../components/open-csv\";\r\nimport OpenRelation from \"../components/open-relation\";\r\nimport ExportCsv from \"../components/export-csv\";\r\n\r\nclass DashboardSide extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard-side-panel\">\r\n        <div className=\"dashboard-side dashboard-left\">\r\n          <MovingPane content={<OpenCsv />} />\r\n          <MovingPane content={<OpenRelation />} />\r\n        </div>\r\n        <DashboardCentral />\r\n        <div className=\"dashboard-side dashboard-right\">\r\n          <MovingPane\r\n            content={<ExportCsv name=\"Requirements\" table={this.props.csv} />}\r\n          />\r\n          <MovingPane\r\n            content={<ExportCsv name=\"Relations\" table={this.props.relation} />}\r\n          />\r\n          <MovingPane content={<ChangeMode />} hidden={true} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { csv: state.side.csv, relation: state.side.relation };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardSide);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownMenuItemType\r\n} from \"office-ui-fabric-react/lib-commonjs/Dropdown\";\r\nimport { DefaultButton } from \"office-ui-fabric-react/lib-commonjs/Button\";\r\nimport { setRelation } from \"../actions/side\";\r\n\r\nclass RequirementComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedType: \"\",\r\n      selectedRelation: \"\"\r\n    };\r\n    this.getRequirement = this.getRequirement.bind(this);\r\n    this._onChangeType = this._onChangeType.bind(this);\r\n    this._onChangeRelation = this._onChangeRelation.bind(this);\r\n    this.makeRelation = this.makeRelation.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const table = this.props.csv;\r\n    const relationReq = this.props.relation;\r\n    const currentReq = this.getRequirementFromTableIndex(\r\n      table,\r\n      this.props.match.params.data\r\n    );\r\n    let nReq = {};\r\n    relationReq.map(obj => {\r\n      if (obj.x === currentReq.link) {\r\n        nReq = { relation: obj.relation, link: obj.y };\r\n      } else if (obj.y === currentReq.link) {\r\n        nReq = { relation: obj.relation, link: obj.x };\r\n      }\r\n      return nReq;\r\n    });\r\n\r\n    const secondReq = this.getRequirementFromTableLink(table, nReq.link);\r\n\r\n    if (nReq.relation) {\r\n      this.setState({\r\n        selectedType: { key: nReq.relation },\r\n        selectedRelation: { key: secondReq.requirements }\r\n      });\r\n    }\r\n  }\r\n\r\n  getRequirement() {\r\n    const indexData = this.props.match.params.data;\r\n    const table = this.props.csv;\r\n    let nRequirement = [];\r\n    if (table) {\r\n      table.map((obj, index) => {\r\n        if (parseInt(indexData) === index) {\r\n          nRequirement.push(\r\n            Object.keys(obj).map(key => {\r\n              return (\r\n                <div className=\"ls-line\">\r\n                  <div className=\"ls-requirements\">\r\n                    <div className=\"ls-row-title\">{key}</div>\r\n                    <div className=\"ls-row\">\r\n                      {key === \"link\" ? (\r\n                        <a\r\n                          href={obj[key]}\r\n                          rel=\"noopener noreferrer\"\r\n                          target=\"_blank\"\r\n                        >\r\n                          {obj[key]}\r\n                        </a>\r\n                      ) : (\r\n                        obj[key]\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          );\r\n        }\r\n        return nRequirement;\r\n      });\r\n    }\r\n    return nRequirement;\r\n  }\r\n\r\n  getRequirementFromTableText(table, requirement) {\r\n    let nRequirement = {};\r\n    table.map((obj, index) => {\r\n      if (requirement.text === obj.requirements) {\r\n        return (nRequirement = obj);\r\n      }\r\n      return nRequirement;\r\n    });\r\n    return nRequirement;\r\n  }\r\n\r\n  getRequirementFromTableIndex(table, indexData) {\r\n    let nRequirement = {};\r\n    table.map((obj, index) => {\r\n      if (parseInt(indexData) === index) {\r\n        return (nRequirement = obj);\r\n      }\r\n      return nRequirement;\r\n    });\r\n    return nRequirement;\r\n  }\r\n\r\n  getRequirementFromTableLink(table, link) {\r\n    let nRequirement = {};\r\n    table.map((obj, index) => {\r\n      if (link === obj.link) {\r\n        return (nRequirement = obj);\r\n      }\r\n      return nRequirement;\r\n    });\r\n    return nRequirement;\r\n  }\r\n\r\n  makeRelation() {\r\n    const table = this.props.csv;\r\n    const relation = this.props.relation;\r\n    const currentReq = this.getRequirementFromTableIndex(\r\n      table,\r\n      this.props.match.params.data\r\n    );\r\n    const relationReq = this.getRequirementFromTableText(\r\n      table,\r\n      this.state.selectedRelation\r\n    );\r\n    relation.push({\r\n      x: relationReq.link,\r\n      y: currentReq.link,\r\n      relation: this.state.selectedType.text\r\n    });\r\n    this.props.setRelation(relation);\r\n    this.props.history.push(\"/other\");\r\n  }\r\n\r\n  getDropDownFromTable() {\r\n    const table = this.props.csv;\r\n    let nRequirement = [\r\n      {\r\n        key: \"requirements\",\r\n        text: \"Requirements\",\r\n        itemType: DropdownMenuItemType.Header\r\n      }\r\n    ];\r\n    if (table) {\r\n      table.map((obj, index) => {\r\n        return nRequirement.push({\r\n          key: obj.requirements,\r\n          text: obj.requirements\r\n        });\r\n      });\r\n    }\r\n    return nRequirement;\r\n  }\r\n\r\n  _onChangeType = (event, item) => {\r\n    this.setState({ selectedType: item });\r\n  };\r\n\r\n  _onChangeRelation = (event, item) => {\r\n    this.setState({ selectedRelation: item });\r\n  };\r\n\r\n  render() {\r\n    const dropDownTable = this.getDropDownFromTable();\r\n    const requirement = this.getRequirement();\r\n    const { selectedRelation, selectedType } = this.state;\r\n    return (\r\n      <div className=\"dashboard-central\">\r\n        <div className=\"ls-requirement-focus\">{requirement}</div>\r\n        <Dropdown\r\n          label=\"Select type of relation\"\r\n          selectedKey={selectedType ? selectedType.key : undefined}\r\n          onChange={this._onChangeType}\r\n          placeholder=\"Select type of relation\"\r\n          options={[\r\n            {\r\n              key: \"disjoins\",\r\n              text: \"Disjoins\"\r\n            },\r\n            { key: \"belongs\", text: \"Belongs\" },\r\n            { key: \"repeats\", text: \"Repeats\" },\r\n            { key: \"contradicts\", text: \"Contradicts\" },\r\n            { key: \"extends\", text: \"Extends\" },\r\n            { key: \"excepts\", text: \"Excepts\" },\r\n            { key: \"constraints\", text: \"Constraints\" },\r\n            { key: \"characterizes\", text: \"characterizes\" }\r\n          ]}\r\n          styles={{ dropdown: { width: 300 } }}\r\n        />\r\n        <div className=\"ls-requirement-focus\">\r\n          <Dropdown\r\n            label=\"Select Requirement\"\r\n            selectedKey={selectedRelation ? selectedRelation.key : undefined}\r\n            onChange={this._onChangeRelation}\r\n            placeholder=\"Select relation\"\r\n            options={dropDownTable}\r\n            styles={{ dropdown: { width: 300 } }}\r\n          />\r\n        </div>\r\n        <DefaultButton\r\n          text=\"Make relation\"\r\n          onClick={this.makeRelation}\r\n          allowDisabledFocus\r\n          disabled={false}\r\n          checked={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setRelation: relation => {\r\n      dispatch(setRelation(relation));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { csv: state.side.csv, relation: state.side.relation };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RequirementComponent));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Relation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tableToDiv = this.tableToDiv.bind(this);\r\n  }\r\n\r\n  getPicture(elem) {\r\n    return \"\";\r\n  }\r\n\r\n  tableToDiv(table) {\r\n    let nTable = [];\r\n    if (table) {\r\n      nTable = table.map((obj, index) => {\r\n        const listDiv = (\r\n          <div className=\"ls-relation\">\r\n            <div className=\"ls-line\">\r\n              {Object.keys(obj).map(key => {\r\n                let divElement;\r\n                if (key === \"x\" || key === \"y\") {\r\n                  /*divElement = (\r\n                  <iframe\r\n                    id=\"iframeId\"\r\n                    src={obj[key]}\r\n                    style={{ display: \"none\" }}\r\n                  ></iframe>\r\n                );*/\r\n                  divElement = (\r\n                    <a\r\n                      href={obj[key]}\r\n                      rel=\"noopener noreferrer\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {obj[key]}\r\n                    </a>\r\n                  );\r\n                } else {\r\n                  divElement = obj[key];\r\n                }\r\n                return (\r\n                  <div className=\"ls-requirements\">\r\n                    <div className=\"ls-row-title\">{key}</div>\r\n                    <div className=\"ls-row\">{divElement}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            {this.getPicture(obj.relation)}\r\n          </div>\r\n        );\r\n        return listDiv;\r\n      });\r\n    }\r\n    return nTable;\r\n  }\r\n\r\n  render() {\r\n    const table = this.tableToDiv(this.props.relation);\r\n    return <div className=\"dashboard-relation\">{table}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { relation: state.side.relation };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Relation));\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { initializeIcons } from \"office-ui-fabric-react/lib-commonjs/Icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport DashboardSide from \"./dashboard-side/dashboard-side\";\r\nimport RequirementComponent from \"./components/requirement-component\";\r\nimport Relation from \"./components/relation\";\r\nimport \"./assets/styles/app.scss\";\r\n\r\ninitializeIcons();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div\r\n          className={`dashboard${this.props.mode === \"light\" ? \" light\" : \"\"}`}\r\n        >\r\n          <Header />\r\n          <div className=\"dashboard-content\">\r\n            <Switch>\r\n              <Route\r\n                path=\"/requirement/:data\"\r\n                component={RequirementComponent}\r\n              />\r\n              <Route path=\"/other\" component={Relation} />\r\n              <Route component={DashboardSide} />\r\n            </Switch>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { mode: state.side.mode };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  mode: \"\",\r\n  csv: [],\r\n  relation: []\r\n};\r\n\r\nfunction side(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_MODE\":\r\n      return {\r\n        ...state,\r\n        mode: action.mode\r\n      };\r\n    case \"SET_CSV\":\r\n      return {\r\n        ...state,\r\n        csv: action.csv\r\n      };\r\n    case \"SET_RELATION\":\r\n      return {\r\n        ...state,\r\n        relation: action.relation\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default side;\r\n","import { combineReducers } from \"redux\";\r\nimport side from \"./side\";\r\n\r\nconst rootReducer = combineReducers({\r\n  side\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}